Step 1: Download the project from the Dashboard
Step 2: Open your project in Pycharm
Step 3: Create a new conda envrionment
        conda create -n reviewscrapper python==3.6.9
                You can create this conda environment from Anaconda prompt as well as from the pycharm terminal

Step 4: Select the same environment in your pycharm interpreter settings
        File->Setting->PythonProject->PythonInterpreter

Step 5:  Install all the dependencies from requirements.txt file
        pip install -r requirements.txt

Step 6 : Make sure git is installed
            pip install GitPython or pip install PyGithub
	(Testing purpose)
		on your command prompt type --> git    it should show you the git usage command

Step 7: Initialization of files on local machine Git
            All the below command need to be executed from your project folder to initializie a git repository in a new or existing directory

	# git init
	# git status -- optional
	# heroku git:remote -a name_of_app
	# create a simple file from any of the text editor name it as .gitignore  -- optional
	# Whatever the files or folders you don't want to push on you github repo. Add there names inside 	the file

Step 8 : Deployment code to heroku Git
	# git add .
	# git commit -am "initial commit message"
	# git push heroku master


Make sure we have the heroku cli installed
	(Testing purpose)
		on your command prompt type --> heroku    it should show you the heroku usage command

# heroku login
# heroku create
# git remote -v
# conda env remove --name FlipKartScraper


Step 9: How to push local code to Github
 # Create a repository in GitHub
 # cd your folder location on the terminal
 # type git to confirm it is installed on your pc
 # git init
 # git add .
 # git commit -m "my first commit message"
 # git branch -M main
 # git remote add origin https://github.com/obeabi/JumiaReviewScrapper.git
 # git push -u origin main or when pushing to a different branch use git push -u origin branch_name

Step 10 :How to commit future changes to github rep
 # git add .
 # git commit -m "your new commit message"
 # git push -u origin main or when pushing to a different branch use git push origin branch_name

Step 11 : How to Deploy in AWS
# Localize file on GitHub see step 9
# open Elastic Beanstalk in AWS under compute under services
# Create new application/environment; app name, key & value pair, platform is Python and 3.7 runtime
# application code: sample application and the engine is initializes
# create a data pipeline using Developer tools service and select CodePipleine
# give a name and select GitHub version 2 as Source Provider  and click connect to GitHub option and install a new app
# Find repository of interest and main branch and then next
# Skip Build stage and select AWS Elastic Beanstalk as the Deploy provider and give an application name and environment name
# Then we proceed to elastic beanstalk to obtain our ip address
# Delete the app from CloudFormation




Step 12 : How to Deploy in Azure
# Create a resource
# Create web app and select Python as runtime stack and Linux as OS
# Select Review + Create
# Go to Home Page and web would be available and click the web app to enter a new page/window
# Select Deployment center setting and from source select GitHub and use the option to connect to GitHub this way you will be able to sigin
# Fill all necessary options e.g., organization, repository, branch



# open Elastic Beanstalk in AWS under compute under services
# Create new application/environment; app name, key & value pair, platform is Python and 3.7 runtime
# application code: sample application and the engine is initializes
# create a data pipeline using Developer tools service and select CodePipleine
# give a name and select GitHub version 2 as Source Provider  and click connect to GitHub option and install a new app
# Find repository of interest and main branch and then next
# Skip Build stage and select AWS Elastic Beanstalk as the Deploy provider and give an application name and environment name
# Then we proceed to elastic beanstalk to obtain our ip address


Task 1: Create a heroku account on heroku.com
        https://signup.heroku.com/
Task 2: Install GIT
        https://git-scm.com/downloads
Task 3: Install Heroku cli
        https://devcenter.heroku.com/articles/heroku-cli


Task 4:












